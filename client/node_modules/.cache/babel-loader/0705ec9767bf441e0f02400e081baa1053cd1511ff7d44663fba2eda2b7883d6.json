{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lanan\\\\Downloads\\\\HealthyLifeStyle4\\\\client\\\\src\\\\contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport authService from '../services/auth';\n\n// Create the authentication context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the auth context\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n\n// Auth provider component\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Initialize auth state from session storage\n  useEffect(() => {\n    const initAuth = () => {\n      try {\n        const currentUser = authService.getCurrentUser();\n        if (currentUser) {\n          setUser(currentUser);\n        }\n      } catch (err) {\n        console.error('Error initializing auth:', err);\n        setError('שגיאה באתחול המשתמש');\n      } finally {\n        setLoading(false);\n      }\n    };\n    initAuth();\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    console.log('AuthContext: login function called', {\n      email\n    });\n    setLoading(true);\n    setError(null);\n    try {\n      console.log('AuthContext: calling authService.login');\n      const data = await authService.login(email, password);\n      console.log('AuthContext: login successful', data);\n      setUser(data.user);\n      return data.user;\n    } catch (err) {\n      console.error('AuthContext: login error', err);\n      setError(err.message || 'שגיאה בהתחברות');\n      throw err;\n    } finally {\n      setLoading(false);\n      console.log('AuthContext: login process completed');\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    setLoading(true);\n    setError(null);\n    try {\n      const data = await authService.register(userData);\n      return data;\n    } catch (err) {\n      setError(err.message || 'שגיאה בהרשמה');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    authService.logout();\n    setUser(null);\n  };\n\n  // Reset password function\n  const resetPassword = async email => {\n    setLoading(true);\n    setError(null);\n    try {\n      const data = await authService.resetPassword(email);\n      return data;\n    } catch (err) {\n      setError(err.message || 'שגיאה באיפוס סיסמה');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Check if user is authenticated\n  const isAuthenticated = () => {\n    return authService.isAuthenticated();\n  };\n\n  // Check if user is admin\n  const isAdmin = () => {\n    return authService.isAdmin();\n  };\n\n  // Context value\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    resetPassword,\n    isAuthenticated,\n    isAdmin\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"PA9FxEY9xSNRrsSqaLtbYei52Hs=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","authService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","loading","setLoading","error","setError","initAuth","currentUser","getCurrentUser","err","console","login","email","password","log","data","message","register","userData","logout","resetPassword","isAuthenticated","isAdmin","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lanan/Downloads/HealthyLifeStyle4/client/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport authService from '../services/auth';\n\n// Create the authentication context\nconst AuthContext = createContext();\n\n// Custom hook to use the auth context\nexport const useAuth = () => useContext(AuthContext);\n\n// Auth provider component\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Initialize auth state from session storage\n  useEffect(() => {\n    const initAuth = () => {\n      try {\n        const currentUser = authService.getCurrentUser();\n        if (currentUser) {\n          setUser(currentUser);\n        }\n      } catch (err) {\n        console.error('Error initializing auth:', err);\n        setError('שגיאה באתחול המשתמש');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    initAuth();\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    console.log('AuthContext: login function called', { email });\n    setLoading(true);\n    setError(null);\n    \n    try {\n      console.log('AuthContext: calling authService.login');\n      const data = await authService.login(email, password);\n      console.log('AuthContext: login successful', data);\n      setUser(data.user);\n      return data.user;\n    } catch (err) {\n      console.error('AuthContext: login error', err);\n      setError(err.message || 'שגיאה בהתחברות');\n      throw err;\n    } finally {\n      setLoading(false);\n      console.log('AuthContext: login process completed');\n    }\n  };\n\n  // Register function\n  const register = async (userData) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const data = await authService.register(userData);\n      return data;\n    } catch (err) {\n      setError(err.message || 'שגיאה בהרשמה');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    authService.logout();\n    setUser(null);\n  };\n\n  // Reset password function\n  const resetPassword = async (email) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const data = await authService.resetPassword(email);\n      return data;\n    } catch (err) {\n      setError(err.message || 'שגיאה באיפוס סיסמה');\n      throw err;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Check if user is authenticated\n  const isAuthenticated = () => {\n    return authService.isAuthenticated();\n  };\n\n  // Check if user is admin\n  const isAdmin = () => {\n    return authService.isAdmin();\n  };\n\n  // Context value\n  const value = {\n    user,\n    loading,\n    error,\n    login,\n    register,\n    logout,\n    resetPassword,\n    isAuthenticated,\n    isAdmin,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}