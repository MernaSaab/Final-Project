{"ast":null,"code":"/**\n * API service for connecting to the backend server\n * Provides methods for all API endpoints\n */\n//חיבור בין הקליינט לשרת\n//פעולות\nimport API_CONFIG from \"../config/api.config\";\nconst API_BASE_URL = API_CONFIG.BASE_URL;\n\n// Generic request handler with error management\nconst apiRequest = async (endpoint, method = \"GET\", data = null) => {\n  const options = {\n    method,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  if (data) {\n    options.body = JSON.stringify(data);\n  }\n  try {\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, options);\n    if (!response.ok) {\n      throw new Error(`API error: ${response.status}`);\n    }\n    return await response.json();\n  } catch (error) {\n    console.error(\"API request failed:\", error);\n    throw error;\n  }\n};\n\n// User related API calls\nexport const userApi = {\n  // Get all users\n  getAllUsers: () => apiRequest(\"/users\"),\n  // Get user by ID\n  getUserById: userId => apiRequest(`/users/${userId}`),\n  // Create new user\n  createUser: userData => apiRequest(\"/users\", \"POST\", userData),\n  // Update user\n  updateUser: (userId, userData) => apiRequest(`/users/${userId}`, \"PUT\", userData),\n  // Delete user\n  deleteUser: userId => apiRequest(`/users/${userId}`, \"DELETE\")\n};\n\n// Meal related API calls\nexport const mealApi = {\n  // Get all meals\n  getAllMeals: () => apiRequest(\"/meals\"),\n  // Create full order (meals array + user_id + status)\n  createFullOrder: async data => {\n    // First create the order\n    const orderResult = await apiRequest(\"/order_meal/full\", \"POST\", data);\n\n    // Then force refresh all meals to update quantities\n    await apiRequest(\"/meals/refresh-quantities\", \"POST\", {\n      items: data.items\n    });\n    return orderResult;\n  },\n  // Get meal by ID\n  getMealById: mealId => apiRequest(`/meals/${mealId}`),\n  // Create new meal\n  createMeal: mealData => apiRequest(\"/meals\", \"POST\", mealData),\n  // Update meal\n  updateMeal: (mealId, mealData) => apiRequest(`/meals/${mealId}`, \"PUT\", mealData),\n  // Delete meal\n  deleteMeal: mealId => apiRequest(`/meals/${mealId}`, \"DELETE\")\n};\n\n// Order related API calls\nexport const orderApi = {\n  // Get all orders\n  getAllOrders: () => apiRequest(\"/orders\"),\n  // Get order by ID\n  getOrderById: orderId => apiRequest(`/orders/${orderId}`),\n  // Create new order\n  createOrder: orderData => apiRequest(\"/orders\", \"POST\", orderData),\n  // Update order\n  updateOrder: (orderId, orderData) => apiRequest(`/orders/${orderId}`, \"PUT\", orderData),\n  // Delete order\n  deleteOrder: orderId => apiRequest(`/orders/${orderId}`, \"DELETE\")\n};\n\n// OrderMeal related API calls\nexport const orderMealApi = {\n  // Get all order meals\n  getAllOrderMeals: () => apiRequest(\"/order_meal\"),\n  // Get order meal by order ID\n  getOrderMealById: orderId => apiRequest(`/order_meal/${orderId}`),\n  // Create new order meal\n  createOrderMeal: orderMealData => apiRequest(\"/order_meal\", \"POST\", orderMealData),\n  // Update order meal\n  updateOrderMeal: (orderId, orderMealData) => apiRequest(`/order_meal/${orderId}`, \"PUT\", orderMealData),\n  // Delete order meal\n  deleteOrderMeal: orderId => apiRequest(`/order_meal/${orderId}`, \"DELETE\")\n};\n\n// Category related API calls\nexport const categoryApi = {\n  // Get all categories\n  getAllCategories: () => apiRequest(\"/categories\"),\n  // Get category by ID\n  getCategoryById: categoryId => apiRequest(`/categories/${categoryId}`),\n  // Get meals by category\n  getMealsByCategory: categoryId => apiRequest(`/categories/${categoryId}/meals`)\n};\n\n// Admin related API calls\nexport const adminApi = {\n  // Admin login\n  login: credentials => apiRequest(\"/admin/login\", \"POST\", credentials),\n  // Get admin dashboard data\n  getDashboardData: () => apiRequest(\"/admin/dashboard\")\n};\nexport default {\n  userApi,\n  mealApi,\n  orderApi,\n  categoryApi,\n  adminApi\n};","map":{"version":3,"names":["API_CONFIG","API_BASE_URL","BASE_URL","apiRequest","endpoint","method","data","options","headers","body","JSON","stringify","response","fetch","ok","Error","status","json","error","console","userApi","getAllUsers","getUserById","userId","createUser","userData","updateUser","deleteUser","mealApi","getAllMeals","createFullOrder","orderResult","items","getMealById","mealId","createMeal","mealData","updateMeal","deleteMeal","orderApi","getAllOrders","getOrderById","orderId","createOrder","orderData","updateOrder","deleteOrder","orderMealApi","getAllOrderMeals","getOrderMealById","createOrderMeal","orderMealData","updateOrderMeal","deleteOrderMeal","categoryApi","getAllCategories","getCategoryById","categoryId","getMealsByCategory","adminApi","login","credentials","getDashboardData"],"sources":["C:/Users/lanan/Downloads/HealthyLifeStyle4/client/src/services/api.js"],"sourcesContent":["/**\n * API service for connecting to the backend server\n * Provides methods for all API endpoints\n */\n//חיבור בין הקליינט לשרת\n//פעולות\nimport API_CONFIG from \"../config/api.config\";\n\nconst API_BASE_URL = API_CONFIG.BASE_URL;\n\n// Generic request handler with error management\nconst apiRequest = async (endpoint, method = \"GET\", data = null) => {\n  const options = {\n    method,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n  }\n\n  try {\n    const response = await fetch(`${API_BASE_URL}${endpoint}`, options);\n\n    if (!response.ok) {\n      throw new Error(`API error: ${response.status}`);\n    }\n\n    return await response.json();\n  } catch (error) {\n    console.error(\"API request failed:\", error);\n    throw error;\n  }\n};\n\n// User related API calls\nexport const userApi = {\n  // Get all users\n  getAllUsers: () => apiRequest(\"/users\"),\n\n  // Get user by ID\n  getUserById: (userId) => apiRequest(`/users/${userId}`),\n\n  // Create new user\n  createUser: (userData) => apiRequest(\"/users\", \"POST\", userData),\n\n  // Update user\n  updateUser: (userId, userData) =>\n    apiRequest(`/users/${userId}`, \"PUT\", userData),\n\n  // Delete user\n  deleteUser: (userId) => apiRequest(`/users/${userId}`, \"DELETE\"),\n};\n\n// Meal related API calls\nexport const mealApi = {\n  // Get all meals\n  getAllMeals: () => apiRequest(\"/meals\"),\n    // Create full order (meals array + user_id + status)\n  createFullOrder: async (data) => {\n    // First create the order\n    const orderResult = await apiRequest(\"/order_meal/full\", \"POST\", data);\n    \n    // Then force refresh all meals to update quantities\n    await apiRequest(\"/meals/refresh-quantities\", \"POST\", { items: data.items });\n    \n    return orderResult;\n  },\n\n\n  // Get meal by ID\n  getMealById: (mealId) => apiRequest(`/meals/${mealId}`),\n\n  // Create new meal\n  createMeal: (mealData) => apiRequest(\"/meals\", \"POST\", mealData),\n\n  // Update meal\n  updateMeal: (mealId, mealData) =>\n    apiRequest(`/meals/${mealId}`, \"PUT\", mealData),\n\n  // Delete meal\n  deleteMeal: (mealId) => apiRequest(`/meals/${mealId}`, \"DELETE\"),\n};\n\n\n// Order related API calls\nexport const orderApi = {\n  // Get all orders\n  getAllOrders: () => apiRequest(\"/orders\"),\n\n  // Get order by ID\n  getOrderById: (orderId) => apiRequest(`/orders/${orderId}`),\n\n  // Create new order\n  createOrder: (orderData) => apiRequest(\"/orders\", \"POST\", orderData),\n\n  // Update order\n  updateOrder: (orderId, orderData) =>\n    apiRequest(`/orders/${orderId}`, \"PUT\", orderData),\n\n  // Delete order\n  deleteOrder: (orderId) => apiRequest(`/orders/${orderId}`, \"DELETE\"),\n};\n\n// OrderMeal related API calls\nexport const orderMealApi = {\n  // Get all order meals\n  getAllOrderMeals: () => apiRequest(\"/order_meal\"),\n\n  // Get order meal by order ID\n  getOrderMealById: (orderId) => apiRequest(`/order_meal/${orderId}`),\n\n  // Create new order meal\n  createOrderMeal: (orderMealData) => apiRequest(\"/order_meal\", \"POST\", orderMealData),\n\n  // Update order meal\n  updateOrderMeal: (orderId, orderMealData) =>\n    apiRequest(`/order_meal/${orderId}`, \"PUT\", orderMealData),\n\n  // Delete order meal\n  deleteOrderMeal: (orderId) => apiRequest(`/order_meal/${orderId}`, \"DELETE\"),\n};\n\n// Category related API calls\nexport const categoryApi = {\n  // Get all categories\n  getAllCategories: () => apiRequest(\"/categories\"),\n\n  // Get category by ID\n  getCategoryById: (categoryId) => apiRequest(`/categories/${categoryId}`),\n\n  // Get meals by category\n  getMealsByCategory: (categoryId) =>\n    apiRequest(`/categories/${categoryId}/meals`),\n};\n\n// Admin related API calls\nexport const adminApi = {\n  // Admin login\n  login: (credentials) => apiRequest(\"/admin/login\", \"POST\", credentials),\n\n  // Get admin dashboard data\n  getDashboardData: () => apiRequest(\"/admin/dashboard\"),\n};\n\n\n\n\n\nexport default {\n  userApi,\n  mealApi,\n  orderApi,\n  categoryApi,\n  adminApi,\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}