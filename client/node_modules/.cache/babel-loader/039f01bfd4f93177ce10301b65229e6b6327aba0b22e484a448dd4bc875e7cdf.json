{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\n\n/**\n * Custom hook for making API calls with loading and error states\n * @param {Function} apiFunction - The API function to call\n * @param {Array} dependencies - Dependencies array for useEffect (optional)\n * @param {boolean} loadOnMount - Whether to load data on component mount\n * @returns {Object} { data, loading, error, execute }\n */\nconst useApi = (apiFunction, dependencies = [], loadOnMount = true) => {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(loadOnMount);\n  const [error, setError] = useState(null);\n  const execute = async (...args) => {\n    setLoading(true);\n    setError(null);\n    try {\n      const result = await apiFunction(...args);\n      setData(result);\n      return result;\n    } catch (err) {\n      setError(err.message || 'שגיאה בטעינת נתונים');\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (loadOnMount) {\n      execute();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n  return {\n    data,\n    loading,\n    error,\n    execute\n  };\n};\n_s(useApi, \"TqzuNpYG9dJzyqs62gV7Nyvj1pI=\");\nexport default useApi;","map":{"version":3,"names":["useState","useEffect","useApi","apiFunction","dependencies","loadOnMount","_s","data","setData","loading","setLoading","error","setError","execute","args","result","err","message"],"sources":["C:/Users/lanan/Downloads/HealthyLifeStyle4/client/src/hooks/useApi.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\n/**\n * Custom hook for making API calls with loading and error states\n * @param {Function} apiFunction - The API function to call\n * @param {Array} dependencies - Dependencies array for useEffect (optional)\n * @param {boolean} loadOnMount - Whether to load data on component mount\n * @returns {Object} { data, loading, error, execute }\n */\nconst useApi = (apiFunction, dependencies = [], loadOnMount = true) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(loadOnMount);\n  const [error, setError] = useState(null);\n\n  const execute = async (...args) => {\n    setLoading(true);\n    setError(null);\n    \n    try {\n      const result = await apiFunction(...args);\n      setData(result);\n      return result;\n    } catch (err) {\n      setError(err.message || 'שגיאה בטעינת נתונים');\n      return null;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (loadOnMount) {\n      execute();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, dependencies);\n\n  return { data, loading, error, execute };\n};\n\nexport default useApi;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,MAAM,GAAGA,CAACC,WAAW,EAAEC,YAAY,GAAG,EAAE,EAAEC,WAAW,GAAG,IAAI,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAACK,WAAW,CAAC;EACnD,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMa,OAAO,GAAG,MAAAA,CAAO,GAAGC,IAAI,KAAK;IACjCJ,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACF,MAAMG,MAAM,GAAG,MAAMZ,WAAW,CAAC,GAAGW,IAAI,CAAC;MACzCN,OAAO,CAACO,MAAM,CAAC;MACf,OAAOA,MAAM;IACf,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZJ,QAAQ,CAACI,GAAG,CAACC,OAAO,IAAI,qBAAqB,CAAC;MAC9C,OAAO,IAAI;IACb,CAAC,SAAS;MACRP,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDT,SAAS,CAAC,MAAM;IACd,IAAII,WAAW,EAAE;MACfQ,OAAO,CAAC,CAAC;IACX;IACA;EACF,CAAC,EAAET,YAAY,CAAC;EAEhB,OAAO;IAAEG,IAAI;IAAEE,OAAO;IAAEE,KAAK;IAAEE;EAAQ,CAAC;AAC1C,CAAC;AAACP,EAAA,CA7BIJ,MAAM;AA+BZ,eAAeA,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}